#!/bin/sh

echo '>> Fixing WSL mounts'
fix-mounts

## System
lastfile=~/etc/latest-sync
touch $lastfile
read -r last < $lastfile
now=$(date -u +%s)
if [ -z "$last" -o $((now - last)) -ge $((2 * 24 * 60 * 60)) ]
then
	echo '>> Updating repositories'
	doas emerge --sync \
	&& echo $now > $lastfile
else
	echo '>> Skipping repository update'
fi

echo '>> Updating Portage'
doas emerge --update --oneshot sys-apps/portage

echo '>> Updating packages'
doas emerge --update --deep --newuse @world

echo '>> Removing orphaned packages'
doas emerge --depclean --verbose n

echo '>> Updating package list'
list=~/etc/packages.list
cat /var/lib/portage/world > $list{new}
cmp -s $list{new} $list || mv -f $list{new} $list
rm -f $list{new}
simple=~/etc/packages.simple
cut -d / -f 2 < $list \
| sort -u \
> $simple{new}
cmp -s $simple{new} $simple || mv -f $simple{new} $simple
rm -f $simple{new}

## Rust
if which rustup > /dev/null 2>&1
then
	echo '>> Updating rust'
	rustup update
fi

## Python
python=$(which python python3 python2 2> /dev/null | head -1)
if [ -n "$python" ]
then
	if ! $python -m pip --version > /dev/null 2>&1
	then
		echo '>> Installing pip'
		$python -m ensurepip --user --default-pip
	fi

	echo '>> Updating pip'
	$python -m pip install --user --upgrade pip

	echo '>> Updating Python packages'
	$python -m pip list --user --not-required --format freeze \
	| sed 's/==.*//' | grep -Fvx pip | sort -u \
	| xargs -r $python -m pip install --user --upgrade
fi

## Other
if [ -d "$0.d" ]
then
	for f in "$0.d"/*.sh
	do
		[ -r "$f" -a -x "$f" ] && . "$f"
	done
fi
